# Create county-to-EMM map using StandardScenarios' total residential and commercial electricity via duckdb
# Created on 07/25/24
# db path on Kestrel: /projects/dsgrid/data-StandardScenario/buildstock_county_emm_map/buildstock.db
# StandardScenarios repo: https://github.com/dsgrid/dsgrid-project-StandardScenarios/tree/main


# Create tables
D create view res_ld as (select * from read_parquet('../conus_2022_reference_resstock/load_data.parquet/*.parquet'));
D create view res_ldlkup as (select * from read_parquet('../conus_2022_reference_resstock/load_data_lookup.parquet/*.parquet'));
D create view com_ldlkup as (select * from read_parquet('../conus_2022_reference_comstock/load_data_lookup.parquet/*.parquet'));
D create view com_ld as (select * from read_parquet('../conus_2022_reference_comstock/load_data.parquet/*.parquet'));


# Show electric end use names
D with description as (select * from (show res_ld))
select column_name from description where column_name like 'electricity%';

D with description as (select * from (show com_ld))
select column_name from description where column_name like 'electricity%' or column_name = 'district_cooling_cooling';


# Aggregate all electric end uses from load_data tables
D create view res_load as (
with res_load as (
select id, sum(electricity_bath_fan)
+sum(electricity_ceiling_fan)
+sum(electricity_clothes_dryer)
+sum(electricity_clothes_washer)
+sum(electricity_cooking_range)
+sum(electricity_cooling)
+sum(electricity_dishwasher)
+sum(electricity_ext_holiday_light)
+sum(electricity_exterior_lighting)
+sum(electricity_extra_refrigerator)
+sum(electricity_fans_cooling)
+sum(electricity_fans_heating)
+sum(electricity_freezer)
+sum(electricity_garage_lighting)
+sum(electricity_heating)
+sum(electricity_heating_supplement)
+sum(electricity_hot_tub_heater)
+sum(electricity_hot_tub_pump)
+sum(electricity_house_fan)
+sum(electricity_interior_lighting)
+sum(electricity_plug_loads)
+sum(electricity_pool_heater)
+sum(electricity_pool_pump)
+sum(electricity_pumps_cooling)
+sum(electricity_pumps_heating)
+sum(electricity_pv)
+sum(electricity_range_fan)
+sum(electricity_recirc_pump)
+sum(electricity_refrigerator)
+sum(electricity_vehicle)
+sum(electricity_water_systems)
+sum(electricity_well_pump)
as total_electricity from res_ld group by 1
), res_load_total as (
select * from res_load join res_ldlkup on res_load.id=res_ldlkup.id
) select geography, sum(total_electricity) as total_electricity from res_load_total group by 1
);

D create view com_load as (
with com_load as (
select id, sum(district_cooling_cooling)
+sum(electricity_cooling)
+sum(electricity_exterior_lighting)
+sum(electricity_fans)
+sum(electricity_heat_recovery)
+sum(electricity_heat_rejection)
+sum(electricity_heating)
+sum(electricity_interior_equipment)
+sum(electricity_interior_lighting)
+sum(electricity_pumps)
+sum(electricity_refrigeration)
+sum(electricity_water_systems)
as total_electricity from com_ld group by 1
), com_load_total as (
select * from com_load join com_ldlkup on com_load.id=com_ldlkup.id
) select geography, sum(total_electricity) as total_electricity from com_load_total group by 1
);

D create view build_load as (
select geography, sum(total_electricity) as total_electricity from 
(select * from res_load union select * from com_load)
group by 1
);


# Export result
D copy (select * from build_load) TO 'building_total_electricity_by_county' (HEADER, DELIMITER ',');
D select * from read_csv('building_total_electricity_by_county') limit 10;
